1. 반복문
 1-1. for문
   - for문은 사람이 직접 처리하기에 부담스러운 반복적인 작업을 처리하기에 매우 용이
 1-2. while문

2. 함수
 2-1. 함수의 정의
	function 함수이름()	{
		... 실행할 구문...
	}
 2-2. 함수의 호출
	함수이름();
 2-3. 파라미터가 있는 함수
	function f(x, y) {
		
	}
 2-4. 파라미터가 있는 함수 호출
	f(10, 2);
 2-5. 리턴형 함수
	function f(x) {
		return x + 1; 
	}
	var y = f(5);
   - 자바스크립트의 함수는 처리도중 return문을 만나게 되면 그 즉시 실행을 중단한다. 
   - 이러한 특성을 이용하여 특정 조건이 충족되지 않을 경우등에 대한 처리중단을 목적으로 return문을 사용할 수 있으며,
     리턴값 없이 처리를 중단하고자 하는 경우에는 return 키워드만 사용한다. 
   - 이 때, 값이 없는 리턴 결과를 변수에 대입한 경우, 정의되지 않은 값인 "undefined"가 대입된다.
 2-6. 익명함수
   - 이름이 없고, 일회성 호출로 자주 사용된다.
	(function(){
            		i = 0;
	            while(i<10) {
             			document.write(i);
                		i++;
            		}
        	})();
 2-7. 화살표함수
   - 함수 표현식 보다 단순하고 간결한 문법으로 함수를 만들 수 있는 방법
   - 매개변수의 지정
	() => {...} // 매개변수가 없는 경우
	x => {...} // 매개변수가 한 개인 경우 
	(x, y) => {...} // 매개변수가 여러 개인 경우
   - 함수 몸체 지정 방법
	x => {return x* x} 
	x => x*x // 함수 몸체가 한줄의 구문이라면 중괄호 생략 가능, 암묵적으로 return이 된다.
 2-8. 콜백함수
   - 함수의 파라미터로 함수를 넘기는 것