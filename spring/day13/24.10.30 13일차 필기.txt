1. 자바 가변길이 인자
 - 자바에서는 파라미터 개수가 다르면 다른 메소드로 인식을 한다.
   동일한 기능을 하지만 파라미터가 가변적으로 변경되는 경우 오버로딩을 사용한다.
   그런데 오버로딩은 파라미터 개수에 맞춰서 메소드가 계속 늘어나는 구조이다.
 - 파라미터가 하나인 경우
	public void search(String one) {}
 - 파라미터가 두개인 경우
	public void search(String one, String two) {}
 - 파라미터가 세개인 경우
	public void search(String one, String two, String three) {}
 - map, List, 배열 객체, dto 등으로 파라미터를 전달한다.
 - 가변인자를 사용하면 동적으로 파라미터를 받을 수 있다.
   사용법은 변수 타입 뒤에 기호(...)를 붙여주면 된다.
   가변인자를 가지고 있는 메소드를 호출할 때는 위 방법 모두 가능하다.

2. 영속성전이(CASCADE)란?
 2-1.영속성전이란?
   - 특정 엔티티에 대한 특정한 작업을 수행하면 관련된 엔티티에도 동일한 작업을 수행한다는 의미이다.
   - cascade = CascadeType.ALL : 모든 cascade를 적용
 2-2. cascade =CascadeType.ALL
   - JPA에서 CascadeType.ALL은 엔티티 관계를 정의하는데 사용되는 옵션 중 하나다.
     이 옵션은 부모 엔티티의 변경 사항이 자식 엔티티에 모두 전파되도록 지정한다.
   - CascadeType.ALL의 역할
	-> 부모 엔티티가 저장될 때, 자식 엔티티도 함께 저장
	-> 부모 엔티티가 업데이트될 때, 자식 엔티티도 함께 업데이트 
	-> 부모 엔티티가 삭제될 때, 자식 엔티티도 함께 삭제
   - 예를 들어, 부서(Department)와 직원(Employee)라는 두 개의 엔티티 클래스가 있다고 가정.
     이때 Department 클래스에서 @OneToMany 어노테이션을 사용하여 Employee 엔티티와 일대다 관계를 설정하고, CascadeType.ALL 옵션을 추가하여 부서 엔티티가 변경될 때 자식 엔티티인 직원 엔티티도 함께 변경되도록 지정할 수 있다.

3. QueryDSL
 3-1. QueryDSL 세팅
   - QClass 생성