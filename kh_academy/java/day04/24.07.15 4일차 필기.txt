1. 삼항연산자
 - 조건 연산자의 한 종류로 if~else 조건문과 같은 연산을 수행한다.
 1-1. 문법
   - 조건식 ? 반환값1(true) : 반환값2(false);
   - 물음표 앞의 조건식에 따라 결과값이 참(true)이면
     반환값1을 반환하고, 결과값이 거짓(false)이면 반환값2를 반환한다.

2. 반복문
 2-1. for문
	Q. 1+2+3+...+99+100 = ??
	int sum = 0;
	for ((1)int i=1; (2)i<=100; (5)i++) {
		(3)sum += i; (4)
	}
	System.out.println(sum);
   (1) 최초로 초기식을 설정
   (2) 초기식을 설정한 후, 조건식을 판단한다.
       i가 100보다 작거나 같은지 판단
   (3) 만약 조건식이 참이라면 반복적으로 동작할 구문을 1회 실행
   (4) 반복문을 수행한 후, 증감식으로 이동
   (5) 증감식을 수행한 후, 다시 조건식으로 이동한다.
       여전히 조건식이 참이라면 반복수행을 처리하고, 그렇지 않다면 
       for문을 종료한다.
 2-2. while문
   - while문 역시 for문과 마찬가지로 반복적인 처리를 수행하는 문법이다.
   - for문은 초기식, 조건식, 증감식을 모두 내장하는 반면에,
     while문은 조건식만을 내장하기 때문에 초기식과 증감식을 외부에 따로 정의해 주어야 한다.
	초기식;(1)
	while (조건식)(2)(5) {
	(3)... 반복적으로 동작할 구문...
	증감식(4)
	}
 2-3. do~while문 
   - 조건의 판별을 나중에 수행하는 반복문 형태
   - 초기식을 설정한 후 do{...}안의 문장을 우선적으로 1회 실행하고 조건을 판별하므로,
     조건이 참이 아니더라도 최소 1회는 실행된다.
	초기식; (1)
	do {
		...(2)(5) 반복적으로 동작할 구문....
		증갑식(3)	
	} while(조건식)(4);

3. 무한 루프
 - 증감식이 설정되지 않거나, 증감식이 수행되더라도 조건식이 거짓이 되지 않은 형태
 - 조건식이 항상 참이므로, 반복문이 종료되지 않는다.
 - 프로그램이 PC의 자원을 매우 많이 사용하게 되므로, 
   시스템 다운을 발생시킬 수 있다.
 - for문의 무한루프 예
	for(int i=0; i<10; i--){
		System.out.println(i);
	}
 - while문의 무한 루프 예
	while(true){
		System.out.println("hello");
	}

4. 변수의 범위
 4-1. 변수의 범위(=변수의 스코프)
   - 자신보다 하위 블록으로는 침투할 수 있다.
   	int num = 100;
	if(num == 100) {
		// num이 현재 블록 바깥에서
		// 선언되었으므로 유효
		System.out.prinln(num);
	}
	---------------------------------------------------------
	int num = 100;
	for(int i=0; i<10; i++){
		// 유효
		System.out.println(num+i);
	}
	---------------------------------------------------------
   - 자신이 선언된 블록 밖으로는 빠져나갈 수 없다.
	int num = 100;
	if(num == 100){
		// 변수 result가 if블록 안에서
		// 생성되었으므로 사용불가
		int result = num+100;
	}
	System.out.println(result);
	---------------------------------------------------------
	for(int i=0; i<10; i++){
		...
	}
	// i가 for문을 위한 괄호 안에서 사용되었으므로 사용 불가
	System.out.println(i);
   - 블록 안에서 선언된 변수는 블록 밖에서 존재하는 동일한 이름의 변수와는
     이름만 동일할 뿐, 다른 값으로 인식된다.
	int target = 100;
	if(target == 100) {
		int num = target + 100;
	} else {
		int num = target - 100;
	}

5. 문법의 중첩사용
 - 앞서살펴본 문법 표현들은 서로 중첩해서 사용하는 것이 가능하다.
 - if, switch, for, while, do~while