1. MyBatis
 1-1. MyBatis란?
   - 객체 지향 언어인 자바의 관계형 데이터베이스 프로그래밍을 좀 더 쉽게 할 수 있게 도와주는 개발 프레임 워크로서 
   JDBC를 통해 데이터베이스에 액세스하는 작업을 캡슐화하고 일반 SQL쿼리, 저장 프로시저 및 고급 매핑을 지원하며 
   모든 JDBC코드 및 매개 변수의 중복작업을 제거한다.
   - MyBatis에서는 프로그램에 있는 SQL 쿼리들을 한 구성파일에 구성하여 프로그램 코드와 SQL을 분리할 수 있는 장점을 가지고 있다.
   - MyBatis는 기존 JDBC 방식과 달리 SQL문을 XML 파일에 작성함으로써 코드가 줄어들고 SQL문만 따로 관리하기 때문에 수정이 편리하다.
 1-2. MyBatis lib download
   - https://blog.mybatis.org/p/products.html
 1-3. Mybatis 성공 실패
   - select
	성공 : select 문에 해당하는 결과
	실패 : 에러
   - insert
	성공 : 1(여러개일 경우 1)
	실패 : 에러
   - update
	성공 : update된 행의 개수 반환(없으면 0)
	실패 : 0
   - delete
	성공 : delete된 행의 개수 반환(없으면 0)
	실패 : 에러

2. 주소 API 사용 - 카카오
 - https://postcode.map.daum.net/guide

3. EL문과 JSTL
 - JSP페이지 내에 자바 코드와 HTML코드가 섞여있으면 가독성이 떨어진다.
   EL문과 JSTL문을 사용하면 HTML과 같은 태그로만 구성된 일관된 소스코드를 볼 수 있다는 장점이 있다.
 3-1. EL문(Expreesion Language)
   - 값을 간결하고 간편하게 출력할 수 있도록 해주는 언어
   - <%= %>, out.println(); 과 같은 자바코드를 더 이상 사용하지 않고 좀 더 간편하게 출력을 지원하기 위한 도구
   - 배열이나 컬렉션에서도 사용되고, JavaBean 프로퍼티에서도 사용된다. 
 3-2. EL표현식
   - EL구문은 ${...} 내에 표현식으로 표현한다. 
 3-3. EL식의 범위
   - page > request > session > application
   - pageScope : page 영역에서 사용되는 저장소
   - requestScope : request 영역에서 사용되는 저장소
   - sessionScope : session 영역에서 사용되는 저장소
   - applicationScope : application 영역에서 사용되는 저장소
 3-4. EL연산자
   - 산술연산자 : +, -, *, /(div), %(mode)
   - 논리연산자 : &&(and), ||(or), !(not)
   - 비교연산자 : ==(eq), !=(ne), <(lt), >(gt), <=(le), >=(ge)
   - empty 연산자 : 값이 null이거나 공백문자인지를 판단하는 연산자
	${empty ""}	: true
	${empty null}	: true
	${empty data}	: data 변수에 값이 없으면 true, 있으면 false
 3-5. EL 내장객체
   - param : 파라미터 값을 저장하고 있는 저장소

4. JSTL
 - JSP Standard Tab Library
 - 연산이나 조건문, 반복문을 편하게 처리할 수 있으며, 
   JSP 페이지 내에서 자바코드를 사용하지 않고도 로직을 구현할 수 있도록 효율적인 방법을 제공한다.

자바
	for(초기식; 조건식; 증감식)
	->
	JSTL
	<c:forEach></c:forEach>
 4-1. JSTL
 - archive.apache.org/dist/jakarta/taglibs/standard/binaries/
 4-2. JSTL core 태그
   - 변수 만들때
	<c:set />
   - 값을 출력할때(EL문을 좀 더 많이 쓴다.)
	<c:out></c:out>
   - 조건 제어(if문)
	<c:choose>
	조건제어 case 문
	   <c:when>조건</c:when>
	조건제어 default문
	   <c:otherwise> </c:otherwise>
	</c:choose>
   - 반복문
	<c:forEach></c:forEach>